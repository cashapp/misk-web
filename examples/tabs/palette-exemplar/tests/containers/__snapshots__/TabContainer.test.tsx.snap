// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TabContainer TabContainer can render with redux 1`] = `
<DocumentFragment>
  <div>
    <div>
      <h1
        class="bp4-heading"
      >
        Redux Powered Containers
      </h1>
      <p>
        There are examples below of forms, networks, buttons, tables, and other UI you will find helpful in building your Misk-Web tab. If you're looking for a way to test network functionality, HttpBin.org has a helpful echo Docker container that will do the trick.
      </p>
      <ol>
        <li>
          <code>
            $ docker run -p 1080:80 kennethreitz/httpbin
          </code>
        </li>
        <li>
          Use 
          <code>
            http://localhost:1080/anything
          </code>
           as your URL for any URL requests below
        </li>
      </ol>
      <h3
        class="bp4-heading"
      >
        Good luck building on Misk-Web! See the 
        <a
          href="https://cashapp.github.io/misk-web/"
        >
          docs
        </a>
         or 
        <a
          href="https://github.com/cashapp/misk-web"
        >
          repo
        </a>
         to learn more.
      </h3>
    </div>
    <table
      class="bp4-html-table bp4-html-table-bordered bp4-html-table-striped"
    >
      <thead>
        <tr>
          <th>
            <p
              class="bp4-skeleton"
            >
              lorem ipsum 1234 5678
            </p>
          </th>
          <th>
            <p
              class="bp4-skeleton"
            >
              lorem ipsum 1234 5678
            </p>
          </th>
          <th>
            <p
              class="bp4-skeleton"
            >
              lorem ipsum 1234 5678
            </p>
          </th>
          <th>
            <p
              class="bp4-skeleton"
            >
              lorem ipsum 1234 5678
            </p>
          </th>
          <th>
            <p
              class="bp4-skeleton"
            >
              lorem ipsum 1234 5678
            </p>
          </th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>
            <p
              class="bp4-skeleton"
            >
              lorem ipsum 1234 5678
            </p>
          </td>
          <td>
            <p
              class="bp4-skeleton"
            >
              lorem ipsum 1234 5678
            </p>
          </td>
          <td>
            <p
              class="bp4-skeleton"
            >
              lorem ipsum 1234 5678
            </p>
          </td>
          <td>
            <p
              class="bp4-skeleton"
            >
              lorem ipsum 1234 5678
            </p>
          </td>
          <td>
            <p
              class="bp4-skeleton"
            >
              lorem ipsum 1234 5678
            </p>
          </td>
        </tr>
      </tbody>
    </table>
    <div>
      <h1
        class="bp4-heading"
      >
        Example Network Container
      </h1>
      <pre
        class="bp4-code-block"
      >
        simpleRedux: {}
      </pre>
      <pre
        class="bp4-code-block"
      >
        url: 
      </pre>
      <div
        class="bp4-input-group"
      >
        <input
          class="bp4-input"
          placeholder="Request URL: http://your.url.com/to/send/a/request/to/"
          type="url"
        />
      </div>
      <textarea
        class="bp4-input bp4-fill"
        placeholder="Request Body (JSON or Text)"
      />
      <div
        class="bp4-button-group"
      >
        <button
          class="bp4-button bp4-intent-danger"
          type="button"
        >
          <span
            class="bp4-button-text"
          >
            DELETE
          </span>
        </button>
        <button
          class="bp4-button bp4-intent-success"
          type="button"
        >
          <span
            class="bp4-button-text"
          >
            GET
          </span>
        </button>
        <button
          class="bp4-button"
          type="button"
        >
          <span
            class="bp4-button-text"
          >
            HEAD
          </span>
        </button>
        <button
          class="bp4-button bp4-intent-primary"
          type="button"
        >
          <span
            class="bp4-button-text"
          >
            PATCH
          </span>
        </button>
        <button
          class="bp4-button bp4-intent-primary"
          type="button"
        >
          <span
            class="bp4-button-text"
          >
            POST
          </span>
        </button>
        <button
          class="bp4-button bp4-intent-warning"
          type="button"
        >
          <span
            class="bp4-button-text"
          >
            PUT
          </span>
        </button>
      </div>
    </div>
    <div>
      <h1
        class="bp4-heading"
      >
        Example Form Container :: ExampleForm
      </h1>
      <pre
        class="bp4-code-block"
      >
        simpleRedux: {}
      </pre>
      <div
        class="bp4-form-group"
      >
        <div
          class="bp4-form-content"
        >
          <div
            class="bp4-input-group"
          >
            <input
              class="bp4-input"
              id="text-input"
              placeholder="Full Name"
              type="text"
            />
          </div>
          <div
            class="bp4-control-group bp4-numeric-input"
          >
            <div
              class="bp4-input-group"
            >
              <span
                aria-hidden="true"
                class="bp4-icon bp4-icon-dollar"
                icon="dollar"
                tabindex="-1"
              >
                <svg
                  data-icon="dollar"
                  height="16"
                  role="img"
                  viewBox="0 0 16 16"
                  width="16"
                >
                  <path
                    d="M12.83 9.51c-.1-.3-.25-.58-.45-.84s-.45-.49-.75-.7c-.3-.2-.65-.36-1.05-.48-.16-.04-.43-.11-.8-.2-.35-.09-.73-.18-1.12-.28-.39-.1-.74-.19-1.06-.27-.31-.08-.49-.12-.54-.13-.43-.12-.78-.29-1.05-.52-.27-.23-.4-.55-.4-.95 0-.29.07-.53.21-.72.14-.19.32-.34.54-.46.22-.11.46-.19.72-.24.26-.05.52-.08.77-.08.74 0 1.35.15 1.83.46.48.3.75.83.81 1.56h2.14c0-.6-.13-1.13-.38-1.58-.25-.45-.59-.84-1.02-1.15-.43-.31-.93-.54-1.49-.7-.24-.06-.49-.1-.75-.14V1c0-.55-.45-1-1-1s-1 .45-1 1v1.08c-.23.03-.46.07-.68.13-.54.13-1.02.34-1.44.61-.42.28-.76.63-1.02 1.05-.26.43-.39.93-.39 1.5 0 .3.04.59.13.88.09.29.23.56.44.82.21.26.48.49.83.7.35.21.79.38 1.31.51.85.21 1.56.38 2.14.52.58.13 1.08.28 1.52.42.25.09.48.23.69.44.21.21.32.53.32.97 0 .21-.05.42-.14.63-.09.21-.24.39-.45.55-.21.16-.47.29-.81.39-.33.1-.73.15-1.2.15-.43 0-.84-.05-1.21-.14-.37-.09-.7-.24-.99-.43-.29-.2-.51-.45-.67-.76-.16-.31-.24-.68-.24-1.12H3c.01.71.15 1.32.43 1.84.27.52.64.94 1.1 1.27.46.33.99.58 1.61.74.27.07.56.12.85.16V15c0 .55.45 1 1 1s1-.45 1-1v-1.05c.3-.03.61-.08.9-.15.58-.13 1.1-.34 1.56-.63.46-.29.83-.66 1.11-1.11.28-.45.42-1 .42-1.64 0-.31-.05-.61-.15-.91z"
                    fill-rule="evenodd"
                  />
                </svg>
              </span>
              <input
                aria-valuenow="0"
                autocomplete="off"
                class="bp4-input"
                id="numericInput-0"
                placeholder="Price"
                role="spinbutton"
                type="text"
                value=""
              />
            </div>
            <div
              class="bp4-button-group bp4-vertical bp4-fixed"
            >
              <button
                aria-controls="numericInput-0"
                aria-label="increment"
                class="bp4-button"
                type="button"
              >
                <span
                  aria-hidden="true"
                  class="bp4-icon bp4-icon-chevron-up"
                  icon="chevron-up"
                >
                  <svg
                    data-icon="chevron-up"
                    height="16"
                    role="img"
                    viewBox="0 0 16 16"
                    width="16"
                  >
                    <path
                      d="M12.71 9.29l-4-4C8.53 5.11 8.28 5 8 5s-.53.11-.71.29l-4 4a1.003 1.003 0 001.42 1.42L8 7.41l3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71z"
                      fill-rule="evenodd"
                    />
                  </svg>
                </span>
              </button>
              <button
                aria-controls="numericInput-0"
                aria-label="decrement"
                class="bp4-button"
                type="button"
              >
                <span
                  aria-hidden="true"
                  class="bp4-icon bp4-icon-chevron-down"
                  icon="chevron-down"
                >
                  <svg
                    data-icon="chevron-down"
                    height="16"
                    role="img"
                    viewBox="0 0 16 16"
                    width="16"
                  >
                    <path
                      d="M12 5c-.28 0-.53.11-.71.29L8 8.59l-3.29-3.3a1.003 1.003 0 00-1.42 1.42l4 4c.18.18.43.29.71.29s.53-.11.71-.29l4-4A1.003 1.003 0 0012 5z"
                      fill-rule="evenodd"
                    />
                  </svg>
                </span>
              </button>
            </div>
          </div>
          <span
            class="bp4-popover-wrapper"
          >
            <span
              aria-haspopup="true"
              class="bp4-popover-target"
            >
              <div
                class="bp4-input-group"
              >
                <input
                  autocomplete="off"
                  class="bp4-input"
                  placeholder="YYYY/MM/DD"
                  type="text"
                  value=""
                />
              </div>
            </span>
          </span>
          <textarea
            class="bp4-input bp4-intent-primary bp4-fill"
            placeholder="Itemized Receipt"
          />
          <div
            class="emotion-0"
          >
            <h5
              class="bp4-heading"
            >
              Bill Splitting
            </h5>
            <label
              class="bp4-control bp4-checkbox"
            >
              <input
                type="checkbox"
              />
              <span
                class="bp4-control-indicator"
              />
              Alice
            </label>
            <label
              class="bp4-control bp4-checkbox"
            >
              <input
                type="checkbox"
              />
              <span
                class="bp4-control-indicator"
              />
              Bob
            </label>
            <label
              class="bp4-control bp4-checkbox"
            >
              <input
                type="checkbox"
              />
              <span
                class="bp4-control-indicator"
              />
              Eve
            </label>
            <label
              class="bp4-control bp4-checkbox"
            >
              <input
                type="checkbox"
              />
              <span
                class="bp4-control-indicator"
              />
              Mallory
            </label>
            <label
              class="bp4-control bp4-checkbox"
            >
              <input
                type="checkbox"
              />
              <span
                class="bp4-control-indicator"
              />
              Trent
            </label>
          </div>
          <div>
            <label
              class="bp4-label"
            >
              Meal
            </label>
            <label
              class="bp4-control bp4-radio bp4-inline"
            >
              <input
                name="Blueprint4.RadioGroup-0"
                type="radio"
                value="breakfast"
              />
              <span
                class="bp4-control-indicator"
              />
              Breakfast
            </label>
            <label
              class="bp4-control bp4-radio bp4-inline"
            >
              <input
                name="Blueprint4.RadioGroup-0"
                type="radio"
                value="lunch"
              />
              <span
                class="bp4-control-indicator"
              />
              Lunch
            </label>
            <label
              class="bp4-control bp4-radio bp4-inline"
            >
              <input
                name="Blueprint4.RadioGroup-0"
                type="radio"
                value="dinner"
              />
              <span
                class="bp4-control-indicator"
              />
              Dinner
            </label>
          </div>
          <div
            class="bp4-input bp4-tag-input"
          >
            <div
              class="bp4-tag-input-values"
            >
              <input
                class="bp4-input-ghost"
                placeholder="Tags"
                value=""
              />
            </div>
          </div>
          <br />
          <h3
            class="bp4-heading"
          >
            Form Submission
          </h3>
          <pre
            class="bp4-code-block"
          >
            submit form network request: 
          </pre>
          <div
            class="bp4-input-group"
          >
            <input
              class="bp4-input"
              placeholder="Form POST URL: http://your.url.com/to/send/a/request/to/"
              type="url"
            />
          </div>
          <button
            class="bp4-button bp4-intent-primary"
            type="button"
          >
            <span
              class="bp4-button-text"
            >
              POST
            </span>
          </button>
        </div>
      </div>
    </div>
    <div>
      <h1
        class="bp4-heading"
      >
        Example Merge Saga Container
      </h1>
      <p>
        Showcase using a custom mergeSaga to seed form fields from a network request.
      </p>
      <div
        class="bp4-button-group"
      >
        <button
          class="bp4-button bp4-intent-primary"
          type="button"
        >
          <span
            class="bp4-button-text"
          >
            Seed Fields
          </span>
        </button>
        <button
          class="bp4-button bp4-intent-primary"
          type="button"
        >
          <span
            class="bp4-button-text"
          >
            Fail to Seed Fields
          </span>
        </button>
      </div>
      <div
        class="bp4-form-group"
      >
        <div
          class="bp4-form-content"
        >
          <div
            class="bp4-input-group"
          >
            <input
              class="bp4-input"
              id="text-input"
              placeholder="alpha"
              type="text"
              value=""
            />
          </div>
          <div
            class="bp4-input-group"
          >
            <input
              class="bp4-input"
              id="text-input"
              placeholder="bravo"
              type="text"
              value=""
            />
          </div>
          <div
            class="bp4-input-group"
          >
            <input
              class="bp4-input"
              id="text-input"
              placeholder="charlie"
              type="text"
              value=""
            />
          </div>
          <div
            class="bp4-input-group"
          >
            <input
              class="bp4-input"
              id="text-input"
              placeholder="delta"
              type="text"
              value=""
            />
          </div>
          <div
            class="bp4-input-group"
          >
            <input
              class="bp4-input"
              id="text-input"
              placeholder="echo"
              type="text"
              value=""
            />
          </div>
          <div
            class="bp4-input-group"
          >
            <input
              class="bp4-input"
              id="text-input"
              placeholder="foxtrot"
              type="text"
              value=""
            />
          </div>
          <div
            class="bp4-input-group"
          >
            <input
              class="bp4-input"
              id="text-input"
              placeholder="gary"
              type="text"
              value=""
            />
          </div>
        </div>
      </div>
      <button
        class="bp4-button bp4-intent-primary"
        type="button"
      >
        <span
          class="bp4-button-text"
        >
          Submit Form
        </span>
      </button>
      <pre
        class="bp4-code-block"
      >
        submit form POST payload: ""
      </pre>
    </div>
    <div>
      <h1
        class="bp4-heading"
      >
        Router Path Parameters
      </h1>
      Learn more about these props injected by 
      <a
        href="https://reacttraining.com/react-router/web/api/location"
      >
        React Router here
      </a>
      .
      <h3
        class="bp4-heading"
      >
        History
      </h3>
      <pre
        class="bp4-code-block emotion-1"
      />
      <h3
        class="bp4-heading"
      >
        Location
      </h3>
      <pre
        class="bp4-code-block emotion-1"
      />
      <h3
        class="bp4-heading"
      >
        Match
      </h3>
      <p>
        This example uses the following route configuration to show how path parameters can be easily parsed out within a component.
      </p>
      <pre
        class="bp4-code-block emotion-1"
      >
              &lt;Switch&gt;
        &lt;Route path="/path/param/:first/:second/" component={TabContainer} /&gt;
        ...
      &lt;/Switch&gt;
    
      </pre>
      <p>
        Clicking Test Path Parameter below changes the url path to "/path/param/alpha/bravo". The blue buttons will then change from saying "none" to "alpha" and "bravo" respectively.
      </p>
      <div
        class="bp4-control-group"
      >
        <button
          class="bp4-button"
          type="button"
        >
          <span
            aria-hidden="true"
            class="bp4-icon bp4-icon-reset"
            icon="reset"
          >
            <svg
              data-icon="reset"
              height="16"
              role="img"
              viewBox="0 0 16 16"
              width="16"
            >
              <path
                d="M6 5c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1s1 .45 1 1v1.74A7.95 7.95 0 018 0c4.42 0 8 3.58 8 8 0 4.06-3.02 7.4-6.94 7.92-.02 0-.04.01-.06.01-.33.04-.66.07-1 .07-4.42 0-8-3.58-8-8 0-.55.45-1 1-1s1 .45 1 1c0 3.31 2.69 6 6 6 .71 0 1.37-.15 2-.38v.01c2.33-.82 4-3.02 4-5.63 0-3.31-2.69-6-6-6-1.77 0-3.36.78-4.46 2H5c.55 0 1 .45 1 1z"
                fill-rule="evenodd"
              />
            </svg>
          </span>
        </button>
        <button
          class="bp4-button bp4-disabled"
          disabled=""
          tabindex="-1"
          type="button"
        >
          <span
            class="bp4-button-text"
          >
            Test Path Parmeter
          </span>
        </button>
        <button
          class="bp4-button bp4-intent-primary"
          type="button"
        >
          <span
            class="bp4-button-text"
          >
            none
          </span>
        </button>
        <button
          class="bp4-button bp4-intent-primary"
          type="button"
        >
          <span
            class="bp4-button-text"
          >
            none
          </span>
        </button>
      </div>
      <pre
        class="bp4-code-block emotion-1"
      />
    </div>
  </div>
</DocumentFragment>
`;
