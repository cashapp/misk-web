import * as fs from "fs-extra"
import {
  Files,
  IMiskTabJSON,
  JsonOptions,
  logDebug,
  makePath,
  parseArgs,
  getSemVarPackageVersionOnNPM
} from "../utils"
import {
  createPackage,
  createTsconfig,
  generatedByCLI,
  gitignore as createGitignore,
  tslint as createTslint,
  webpack
} from "./templates"
import { readMiskTabJson } from "./miskTabUtilities"

const tag = "generate"

export const generateBuildFiles = async (...args: any) => {
  const { dir } = parseArgs(...args)
  logDebug(tag, "", dir)
  let pkg = {}
  if (fs.existsSync(makePath(dir, Files.package))) {
    pkg = fs.readJsonSync(makePath(dir, Files.package))
  }
  const miskTab: IMiskTabJSON = readMiskTabJson(dir)

  // Write out fresh files
  await Promise.all([
    fs.writeJson(
      makePath(dir, Files.tsconfig),
      createTsconfig(miskTab),
      JsonOptions
    ),
    fs.writeJson(
      makePath(dir, Files.tslint),
      createTslint(miskTab),
      JsonOptions
    ),
    fs.writeJson(
      makePath(dir, Files.package),
      await createPackage(miskTab, pkg),
      JsonOptions
    ),
    fs.writeFile(makePath(dir, Files.gitignore), createGitignore(miskTab)),
    fs.writeFile(makePath(dir, Files.webpack), webpack)
  ])

  // Append non-package JSON files with generated by comment
  await fs.writeFile(makePath(dir, Files.tsconfig), generatedByCLI, { flag: "a" })
  await fs.writeFile(makePath(dir, Files.tslint), generatedByCLI, { flag: "a" })
  logDebug(
    tag,
    `Up to date build files generated using Misk Web @ ${await getSemVarPackageVersionOnNPM(
      miskTab.version
    )}`,
    dir
  )
}
